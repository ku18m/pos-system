// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosSystem.Infrastracture.Persistence.Data;

#nullable disable

namespace PosSystem.Infrastracture.Migrations
{
    [DbContext(typeof(PosDbContext))]
    partial class PosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("BillNumber", "dbo")
                .StartsAt(1000000L);

            modelBuilder.HasSequence<int>("ClientNumber", "dbo")
                .StartsAt(1000L);

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "d2c7bc49-90b4-47c8-9ed6-df23c974f284",
                            CompanyId = "e174e132-9e37-407b-9e85-8747e90d7f53",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = "1792c9c9-285e-439a-bc94-97e3d6c64dca",
                            CompanyId = "34111bfb-255b-4346-9d36-3beb91fa1c27",
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = "5ee2e819-a35e-4356-870a-40f3dab99a96",
                            CompanyId = "6e5f48e3-408c-480a-9833-31475d0a481d",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.ClientNumber");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("Address");

                    b.HasIndex("Name");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = "da314426-bcd2-492f-a2b5-39628a6f202d",
                            Address = "123 Main St",
                            Name = "John",
                            Number = 1,
                            Phone = "1234567890"
                        },
                        new
                        {
                            ClientId = "eb1a6e87-657b-4c21-905e-e345f4bd2fff",
                            Address = "456 Elm St",
                            Name = "Jane",
                            Number = 2,
                            Phone = "0987654321"
                        },
                        new
                        {
                            ClientId = "7eb580b7-fd3a-49fb-a8e2-364d1e9d8482",
                            Address = "789 Oak St",
                            Name = "Jim",
                            Number = 3,
                            Phone = "1112223333"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = "e174e132-9e37-407b-9e85-8747e90d7f53",
                            Name = "Tech Corp"
                        },
                        new
                        {
                            CompanyId = "34111bfb-255b-4346-9d36-3beb91fa1c27",
                            Name = "Biz Inc"
                        },
                        new
                        {
                            CompanyId = "6e5f48e3-408c-480a-9833-31475d0a481d",
                            Name = "Retail LLC"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BillNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.BillNumber");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DueAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount] - [PaidAmount]");

                    b.Property<decimal>("FinalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount]");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BillDate");

                    b.HasIndex("BillNumber")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("Date");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = "a6be97f4-31ff-4c6a-8740-902351064c4f",
                            BillDate = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2154),
                            BillNumber = 1L,
                            ClientId = "da314426-bcd2-492f-a2b5-39628a6f202d",
                            Date = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2224),
                            DueAmount = 0m,
                            FinalAmount = 1000m,
                            PaidAmount = 1000m,
                            TotalAmount = 1000m,
                            TotalDiscount = 0m,
                            UserId = "baca97ee-f2da-4e63-be4b-54a004200d2a"
                        },
                        new
                        {
                            Id = "013e9469-9f4a-4b07-9d00-d21d44afc4b3",
                            BillDate = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2230),
                            BillNumber = 2L,
                            ClientId = "eb1a6e87-657b-4c21-905e-e345f4bd2fff",
                            Date = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2238),
                            DueAmount = 0m,
                            FinalAmount = 50m,
                            PaidAmount = 50m,
                            TotalAmount = 50m,
                            TotalDiscount = 0m,
                            UserId = "cc655fe4-ba86-48a2-aa62-05d454a24b4d"
                        },
                        new
                        {
                            Id = "5fb504a4-2ee5-4a4c-a01c-bfe997cadb16",
                            BillDate = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2245),
                            BillNumber = 3L,
                            ClientId = "7eb580b7-fd3a-49fb-a8e2-364d1e9d8482",
                            Date = new DateTime(2024, 9, 17, 6, 1, 19, 480, DateTimeKind.Local).AddTicks(2592),
                            DueAmount = 0m,
                            FinalAmount = 20m,
                            PaidAmount = 20m,
                            TotalAmount = 20m,
                            TotalDiscount = 0m,
                            UserId = "bf3d2e89-6ba6-4794-b6b7-7f9ee3ca6cfe"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FinalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("([Quantity] * [Price]) - [Discount]");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[Quantity] * [Price]");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("InvoiceItems");

                    b.HasData(
                        new
                        {
                            Id = "6d72b613-e248-47e6-8273-761870949448",
                            Discount = 0m,
                            FinalAmount = 1000m,
                            InvoiceId = "a6be97f4-31ff-4c6a-8740-902351064c4f",
                            Price = 1000m,
                            ProductId = "cefb5e",
                            Quantity = 1m,
                            TotalAmount = 1000m,
                            UnitId = "9d5b276a-5c24-4672-9ed9-34cfe5cca9ea"
                        },
                        new
                        {
                            Id = "93bbbf8a-c437-48b3-bfd1-a98274871455",
                            Discount = 0m,
                            FinalAmount = 50m,
                            InvoiceId = "013e9469-9f4a-4b07-9d00-d21d44afc4b3",
                            Price = 50m,
                            ProductId = "e19ce4",
                            Quantity = 1m,
                            TotalAmount = 50m,
                            UnitId = "a099b55b-0330-423a-b2e3-90bc388dfe99"
                        },
                        new
                        {
                            Id = "dfab5abf-665c-43dc-82e8-2c8a44643fb6",
                            Discount = 0m,
                            FinalAmount = 20m,
                            InvoiceId = "5fb504a4-2ee5-4a4c-a01c-bfe997cadb16",
                            Price = 20m,
                            ProductId = "2c1167",
                            Quantity = 1m,
                            TotalAmount = 20m,
                            UnitId = "1b3ed427-373b-431e-829b-cb46a619f80e"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId")
                        .IsUnique();

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UnitId")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "cefb5e",
                            BuyingPrice = 800m,
                            CategoryId = "d2c7bc49-90b4-47c8-9ed6-df23c974f284",
                            CompanyId = "e174e132-9e37-407b-9e85-8747e90d7f53",
                            Name = "Laptop",
                            Quantity = 10,
                            SellingPrice = 1000m,
                            UnitId = "9d5b276a-5c24-4672-9ed9-34cfe5cca9ea"
                        },
                        new
                        {
                            ProductId = "e19ce4",
                            BuyingPrice = 30m,
                            CategoryId = "1792c9c9-285e-439a-bc94-97e3d6c64dca",
                            CompanyId = "34111bfb-255b-4346-9d36-3beb91fa1c27",
                            Name = "Chair",
                            Quantity = 100,
                            SellingPrice = 50m,
                            UnitId = "a099b55b-0330-423a-b2e3-90bc388dfe99"
                        },
                        new
                        {
                            ProductId = "2c1167",
                            BuyingPrice = 10m,
                            CategoryId = "5ee2e819-a35e-4356-870a-40f3dab99a96",
                            CompanyId = "6e5f48e3-408c-480a-9833-31475d0a481d",
                            Name = "T-Shirt",
                            Quantity = 200,
                            SellingPrice = 20m,
                            UnitId = "1b3ed427-373b-431e-829b-cb46a619f80e"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = "9d5b276a-5c24-4672-9ed9-34cfe5cca9ea",
                            Name = "Piece"
                        },
                        new
                        {
                            UnitId = "a099b55b-0330-423a-b2e3-90bc388dfe99",
                            Name = "Box"
                        },
                        new
                        {
                            UnitId = "1b3ed427-373b-431e-829b-cb46a619f80e",
                            Name = "Pack"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "baca97ee-f2da-4e63-be4b-54a004200d2a",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$11$g3VBtLqHZA6NFfOn7BpQ8euXt0Bu/s0IMfE77MI3NtN1OFjWAxKJS",
                            Role = 0,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = "cc655fe4-ba86-48a2-aa62-05d454a24b4d",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "$2a$11$D7cX7XTrWyMydVBMZ3wvj.0j.ZYqJ/UKO8R1qTe6UkDcpUthPFugu",
                            Role = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            UserName = "jane.smith"
                        },
                        new
                        {
                            Id = "bf3d2e89-6ba6-4794-b6b7-7f9ee3ca6cfe",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "$2a$11$OsEooJZF2IEBBMFSnMdCVu9e.fakMT0UA365OyWKR.Gr9pdcEpCYK",
                            Role = 1,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            UserName = "alice.johnson"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Categories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Invoice", "Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Product", "Product")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
