// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosSystem.Infrastracture.Persistence.Data;

#nullable disable

namespace PosSystem.Infrastracture.Migrations
{
    [DbContext(typeof(PosDbContext))]
    partial class PosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("BillNumber", "dbo")
                .StartsAt(1000000L);

            modelBuilder.HasSequence<int>("ClientNumber", "dbo")
                .StartsAt(1000L);

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "c14bc497-f2ef-4f7e-a6ee-0fd39c2559d0",
                            CompanyId = "47e67d00-09d4-471f-871e-06f6d2c02ace",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = "b84383cc-b15c-41bb-8317-d106b7410247",
                            CompanyId = "a54e1194-2813-4739-8f71-50045064ed6e",
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = "76c06eba-94de-4808-a4cd-33023bbf752d",
                            CompanyId = "5b8df501-b523-44fc-ac63-8a1397db0411",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.ClientNumber");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("Address");

                    b.HasIndex("Name");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = "c9d9115c-6a73-426f-88d1-d8a6e8d53c6b",
                            Address = "123 Main St",
                            Name = "John",
                            Number = 1,
                            Phone = "1234567890"
                        },
                        new
                        {
                            ClientId = "e47fb905-5507-4ffe-a9c3-b0e88353d3ae",
                            Address = "456 Elm St",
                            Name = "Jane",
                            Number = 2,
                            Phone = "0987654321"
                        },
                        new
                        {
                            ClientId = "af624889-c6b4-4bb8-9d7a-0f2a97412d78",
                            Address = "789 Oak St",
                            Name = "Jim",
                            Number = 3,
                            Phone = "1112223333"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = "47e67d00-09d4-471f-871e-06f6d2c02ace",
                            Name = "Tech Corp"
                        },
                        new
                        {
                            CompanyId = "a54e1194-2813-4739-8f71-50045064ed6e",
                            Name = "Biz Inc"
                        },
                        new
                        {
                            CompanyId = "5b8df501-b523-44fc-ac63-8a1397db0411",
                            Name = "Retail LLC"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BillNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.BillNumber");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DueAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount] - [PaidAmount]");

                    b.Property<decimal>("FinalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount]");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BillDate");

                    b.HasIndex("BillNumber")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("Date");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = "a51d7b19-6ee1-4f4c-be14-29aa887776eb",
                            BillDate = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4871),
                            BillNumber = 1L,
                            ClientId = "c9d9115c-6a73-426f-88d1-d8a6e8d53c6b",
                            Date = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4953),
                            DueAmount = 0m,
                            FinalAmount = 1000m,
                            PaidAmount = 1000m,
                            TotalAmount = 1000m,
                            TotalDiscount = 0m,
                            UserId = "6c60cd73-7ff9-4ac6-9782-8820729aa023"
                        },
                        new
                        {
                            Id = "7db68675-bcd2-49c7-aa72-396a7ad626d1",
                            BillDate = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4972),
                            BillNumber = 2L,
                            ClientId = "e47fb905-5507-4ffe-a9c3-b0e88353d3ae",
                            Date = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4978),
                            DueAmount = 0m,
                            FinalAmount = 50m,
                            PaidAmount = 50m,
                            TotalAmount = 50m,
                            TotalDiscount = 0m,
                            UserId = "3f58592f-8bfb-41a0-a778-2eb1ba67513e"
                        },
                        new
                        {
                            Id = "3751de2c-cccf-4d22-8388-4ff2f8b00054",
                            BillDate = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4985),
                            BillNumber = 3L,
                            ClientId = "af624889-c6b4-4bb8-9d7a-0f2a97412d78",
                            Date = new DateTime(2024, 9, 18, 5, 6, 28, 464, DateTimeKind.Local).AddTicks(4995),
                            DueAmount = 0m,
                            FinalAmount = 20m,
                            PaidAmount = 20m,
                            TotalAmount = 20m,
                            TotalDiscount = 0m,
                            UserId = "f9a25338-4959-40d0-8eb5-0ba163fdea30"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("FinalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("([Quantity] * [Price]) - [Discount]");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[Quantity] * [Price]");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("InvoiceItems");

                    b.HasData(
                        new
                        {
                            Id = "91749636-98e6-427a-a994-60c6d760d8af",
                            Discount = 0m,
                            FinalAmount = 1000m,
                            InvoiceId = "a51d7b19-6ee1-4f4c-be14-29aa887776eb",
                            Price = 1000m,
                            ProductId = "c70b91",
                            Quantity = 1m,
                            TotalAmount = 1000m,
                            UnitId = "5d5b0163-cbe2-4fd5-96f0-10ca530110b4"
                        },
                        new
                        {
                            Id = "7e42d6e3-701d-40ae-97ad-d34ebb4f53a5",
                            Discount = 0m,
                            FinalAmount = 50m,
                            InvoiceId = "7db68675-bcd2-49c7-aa72-396a7ad626d1",
                            Price = 50m,
                            ProductId = "16d751",
                            Quantity = 1m,
                            TotalAmount = 50m,
                            UnitId = "35c5d8e1-cca2-48d5-b1a4-e08e43f05190"
                        },
                        new
                        {
                            Id = "5baed914-c1cc-4a84-8ee1-999929cf40c2",
                            Discount = 0m,
                            FinalAmount = 20m,
                            InvoiceId = "3751de2c-cccf-4d22-8388-4ff2f8b00054",
                            Price = 20m,
                            ProductId = "cf7f7e",
                            Quantity = 1m,
                            TotalAmount = 20m,
                            UnitId = "c3da37d8-206e-4674-8b46-29726ce2203a"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "c70b91",
                            BuyingPrice = 800m,
                            CategoryId = "c14bc497-f2ef-4f7e-a6ee-0fd39c2559d0",
                            CompanyId = "47e67d00-09d4-471f-871e-06f6d2c02ace",
                            Name = "Laptop",
                            Quantity = 10,
                            SellingPrice = 1000m,
                            UnitId = "5d5b0163-cbe2-4fd5-96f0-10ca530110b4"
                        },
                        new
                        {
                            ProductId = "16d751",
                            BuyingPrice = 30m,
                            CategoryId = "b84383cc-b15c-41bb-8317-d106b7410247",
                            CompanyId = "a54e1194-2813-4739-8f71-50045064ed6e",
                            Name = "Chair",
                            Quantity = 100,
                            SellingPrice = 50m,
                            UnitId = "35c5d8e1-cca2-48d5-b1a4-e08e43f05190"
                        },
                        new
                        {
                            ProductId = "cf7f7e",
                            BuyingPrice = 10m,
                            CategoryId = "76c06eba-94de-4808-a4cd-33023bbf752d",
                            CompanyId = "5b8df501-b523-44fc-ac63-8a1397db0411",
                            Name = "T-Shirt",
                            Quantity = 200,
                            SellingPrice = 20m,
                            UnitId = "c3da37d8-206e-4674-8b46-29726ce2203a"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = "5d5b0163-cbe2-4fd5-96f0-10ca530110b4",
                            Name = "Piece"
                        },
                        new
                        {
                            UnitId = "35c5d8e1-cca2-48d5-b1a4-e08e43f05190",
                            Name = "Box"
                        },
                        new
                        {
                            UnitId = "c3da37d8-206e-4674-8b46-29726ce2203a",
                            Name = "Pack"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "6c60cd73-7ff9-4ac6-9782-8820729aa023",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$11$I.lASZn25x/I3MFw1s6sSO1/XWA1W/dRY9Yo74PxwEC6ees/MiZHu",
                            Role = 0,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = "3f58592f-8bfb-41a0-a778-2eb1ba67513e",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "$2a$11$soiDwcYdMoES/uv4LJRIJuTeT5AiWwMVqHiyQwMP.k8JMgFsy.P/S",
                            Role = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            UserName = "jane.smith"
                        },
                        new
                        {
                            Id = "f9a25338-4959-40d0-8eb5-0ba163fdea30",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "$2a$11$LlMgCMi.FjVcwnK1HAhtX.NDY/O98AyosDOBch55ooHfvxxwnK4NS",
                            Role = 1,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            UserName = "alice.johnson"
                        });
                });

            modelBuilder.Entity("PosSystem.Infrastracture.Persistence.Helpers.SequenceValue", b =>
                {
                    b.Property<int>("CurrentValue")
                        .HasColumnType("int");

                    b.ToTable("SequenceValue");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Categories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Invoice", "Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Product", "Product")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
