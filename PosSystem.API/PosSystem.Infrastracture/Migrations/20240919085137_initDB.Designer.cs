// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosSystem.Infrastracture.Persistence.Data;

#nullable disable

namespace PosSystem.Infrastracture.Migrations
{
    [DbContext(typeof(PosDbContext))]
    [Migration("20240919085137_initDB")]
    partial class initDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("BillNumber", "dbo")
                .StartsAt(1000000L);

            modelBuilder.HasSequence<int>("ClientNumber", "dbo")
                .StartsAt(1000L);

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = "7e076ad1-ebaf-4803-83f1-68e9e995269b",
                            CompanyId = "4e8fbcb7-6d6e-4d85-ad5c-2e160d59a217",
                            Name = "Electronics"
                        },
                        new
                        {
                            CategoryId = "82e8bc6a-7107-42b3-8759-c90bf1b9da63",
                            CompanyId = "85f36626-6316-4051-92da-d05f54a3eeaa",
                            Name = "Furniture"
                        },
                        new
                        {
                            CategoryId = "760bb6fe-1dec-4485-8781-ccd980bff780",
                            CompanyId = "74a3c775-2340-4e03-95c6-eee183a6f070",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.ClientNumber");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ClientId");

                    b.HasIndex("Address");

                    b.HasIndex("Name");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.HasIndex("Phone");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = "01b7952b-fde0-4d7c-a53e-e70999a469e6",
                            Address = "123 Main St",
                            Name = "John",
                            Number = 1,
                            Phone = "1234567890"
                        },
                        new
                        {
                            ClientId = "85593aa9-5f7e-4c67-95a8-bd4a6474e9d8",
                            Address = "456 Elm St",
                            Name = "Jane",
                            Number = 2,
                            Phone = "0987654321"
                        },
                        new
                        {
                            ClientId = "d9b29e24-d2e8-45a5-b3ae-9d3f4aedf8aa",
                            Address = "789 Oak St",
                            Name = "Jim",
                            Number = 3,
                            Phone = "1112223333"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Property<string>("CompanyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = "4e8fbcb7-6d6e-4d85-ad5c-2e160d59a217",
                            Name = "Tech Corp"
                        },
                        new
                        {
                            CompanyId = "85f36626-6316-4051-92da-d05f54a3eeaa",
                            Name = "Biz Inc"
                        },
                        new
                        {
                            CompanyId = "74a3c775-2340-4e03-95c6-eee183a6f070",
                            Name = "Retail LLC"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("BillNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("NEXT VALUE FOR dbo.BillNumber");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DueAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount] - [PaidAmount]");

                    b.Property<decimal>("FinalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[TotalAmount] - [TotalDiscount]");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BillDate");

                    b.HasIndex("BillNumber")
                        .IsUnique();

                    b.HasIndex("ClientId");

                    b.HasIndex("Date");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            Id = "7a731996-b5f2-4ff1-b56c-125f1657b9b0",
                            BillDate = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1330),
                            BillNumber = 1L,
                            ClientId = "01b7952b-fde0-4d7c-a53e-e70999a469e6",
                            Date = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1422),
                            DueAmount = 0m,
                            FinalAmount = 1000m,
                            PaidAmount = 1000m,
                            TotalAmount = 1000m,
                            TotalDiscount = 0m,
                            UserId = "e5fcfa12-a3d2-4fd7-abbe-ffc919409a6b"
                        },
                        new
                        {
                            Id = "35b31972-8417-46ff-910c-a7319c42fd6f",
                            BillDate = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1433),
                            BillNumber = 2L,
                            ClientId = "85593aa9-5f7e-4c67-95a8-bd4a6474e9d8",
                            Date = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1438),
                            DueAmount = 0m,
                            FinalAmount = 50m,
                            PaidAmount = 50m,
                            TotalAmount = 50m,
                            TotalDiscount = 0m,
                            UserId = "f49141da-adf2-4fcd-a756-aeb96f346e72"
                        },
                        new
                        {
                            Id = "1468aa44-79dc-4652-8a52-760be80e18fb",
                            BillDate = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1444),
                            BillNumber = 3L,
                            ClientId = "d9b29e24-d2e8-45a5-b3ae-9d3f4aedf8aa",
                            Date = new DateTime(2024, 9, 19, 11, 51, 36, 391, DateTimeKind.Local).AddTicks(1454),
                            DueAmount = 0m,
                            FinalAmount = 20m,
                            PaidAmount = 20m,
                            TotalAmount = 20m,
                            TotalDiscount = 0m,
                            UserId = "f246b47b-80c2-411b-b8fa-fa90f994403b"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalAmount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(18, 2)")
                        .HasComputedColumnSql("[Quantity] * [Price]");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UnitId");

                    b.ToTable("InvoiceItems");

                    b.HasData(
                        new
                        {
                            Id = "a6a3537f-2148-4821-9af4-ee363c3fd59c",
                            InvoiceId = "7a731996-b5f2-4ff1-b56c-125f1657b9b0",
                            Price = 1000m,
                            ProductId = "e89ff6",
                            Quantity = 1m,
                            TotalAmount = 1000m,
                            UnitId = "6d33b20d-10e2-4cc1-9a8f-ed9095bf043e"
                        },
                        new
                        {
                            Id = "e7fca972-6014-4536-b01b-dd87b1474ce7",
                            InvoiceId = "35b31972-8417-46ff-910c-a7319c42fd6f",
                            Price = 50m,
                            ProductId = "41da07",
                            Quantity = 1m,
                            TotalAmount = 50m,
                            UnitId = "fc92090b-105f-4923-854c-bd362bde7f8d"
                        },
                        new
                        {
                            Id = "80e1fba2-5763-4398-896b-36191256c59d",
                            InvoiceId = "1468aa44-79dc-4652-8a52-760be80e18fb",
                            Price = 20m,
                            ProductId = "059ace",
                            Quantity = 1m,
                            TotalAmount = 20m,
                            UnitId = "22ba30c6-5d60-4d48-a17a-eb8e152797eb"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("BuyingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("UnitId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UnitId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = "e89ff6",
                            BuyingPrice = 800m,
                            CategoryId = "7e076ad1-ebaf-4803-83f1-68e9e995269b",
                            CompanyId = "4e8fbcb7-6d6e-4d85-ad5c-2e160d59a217",
                            Name = "Laptop",
                            Quantity = 10m,
                            SellingPrice = 1000m,
                            UnitId = "6d33b20d-10e2-4cc1-9a8f-ed9095bf043e"
                        },
                        new
                        {
                            ProductId = "41da07",
                            BuyingPrice = 30m,
                            CategoryId = "82e8bc6a-7107-42b3-8759-c90bf1b9da63",
                            CompanyId = "85f36626-6316-4051-92da-d05f54a3eeaa",
                            Name = "Chair",
                            Quantity = 100m,
                            SellingPrice = 50m,
                            UnitId = "fc92090b-105f-4923-854c-bd362bde7f8d"
                        },
                        new
                        {
                            ProductId = "059ace",
                            BuyingPrice = 10m,
                            CategoryId = "760bb6fe-1dec-4485-8781-ccd980bff780",
                            CompanyId = "74a3c775-2340-4e03-95c6-eee183a6f070",
                            Name = "T-Shirt",
                            Quantity = 200m,
                            SellingPrice = 20m,
                            UnitId = "22ba30c6-5d60-4d48-a17a-eb8e152797eb"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitId = "6d33b20d-10e2-4cc1-9a8f-ed9095bf043e",
                            Name = "Piece"
                        },
                        new
                        {
                            UnitId = "fc92090b-105f-4923-854c-bd362bde7f8d",
                            Name = "Box"
                        },
                        new
                        {
                            UnitId = "22ba30c6-5d60-4d48-a17a-eb8e152797eb",
                            Name = "Pack"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "e5fcfa12-a3d2-4fd7-abbe-ffc919409a6b",
                            EndTime = new TimeSpan(0, 17, 0, 0, 0),
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$11$CtJBer78S24mWh5qAfH6buKl2PB/q3wSiypg6YzasdXOJG/Hn9UJC",
                            Role = 0,
                            StartTime = new TimeSpan(0, 9, 0, 0, 0),
                            UserName = "admin1"
                        },
                        new
                        {
                            Id = "f49141da-adf2-4fcd-a756-aeb96f346e72",
                            EndTime = new TimeSpan(0, 16, 0, 0, 0),
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "$2a$11$nrFhIDyJsyvWtnbXPqIzCO9dbhgOkjWtOzzjXgn6Cm8hHWaPw2q72",
                            Role = 1,
                            StartTime = new TimeSpan(0, 8, 0, 0, 0),
                            UserName = "jane.smith"
                        },
                        new
                        {
                            Id = "f246b47b-80c2-411b-b8fa-fa90f994403b",
                            EndTime = new TimeSpan(0, 18, 0, 0, 0),
                            FirstName = "Alice",
                            LastName = "Johnson",
                            Password = "$2a$11$J0ZF5KzUPdVHEXcBLCNfjOfXzMC7joyHDbPuNqxltFrL44YRaGs7u",
                            Role = 1,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0),
                            UserName = "alice.johnson"
                        });
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Categories")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Client", "Client")
                        .WithMany("Invoices")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.User", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.InvoiceItem", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Invoice", "Invoice")
                        .WithMany("Items")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Product", "Product")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Invoice");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.HasOne("PosSystem.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosSystem.Core.Entities.Unit", "Unit")
                        .WithMany("Products")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Client", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Company", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Invoice", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Product", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.Unit", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("PosSystem.Core.Entities.User", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
